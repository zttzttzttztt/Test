#Addcase的应用

def createsuite():
 suite = unittest.TestSuite()
 #将测试用例加入到测试容器（套件）中
 suite.addTest(testbaidu1.Baidu1("test_baidusearch"))
 suite.addTest(testbaidu1.Baidu1("test_hao"))
 suite.addTest(testbaidu2.Baidu2("test_baidusearch"))
 return suite
 
if __name__=="__main__":
 suite=createsuite()
 runner = unittest.TextTestRunner(verbosity=2)
 runner.run(suite)
 
 #makeSuite（）和TestLoader()的应用
 
 #手工添加案例到套件，
def createsuite():
 suite = unittest.TestSuite()
 #将测试用例加入到测试容器（套件）中
 suite.addTest(unittest.makeSuite(testbaidu1.Baidu1))
 suite.addTest(unittest.makeSuite(testbaidu2.Baidu2))
 return suite
 '''
 suite1 = unittest.TestLoader().loadTestsFromTestCase(testbaidu1.Baidu1) 
 suite2 = unittest.TestLoader().loadTestsFromTestCase(testbaidu2.Baidu2) 
 suite = unittest.TestSuite([suite1, suite2])
 return suite
 '''
 
if __name__=="__main__":
 suite=createsuite()
 runner = unittest.TextTestRunner(verbosity=2)
 runner.run(suite)
 
 
 
 #discover（）的应用
 #手工添加案例到套件，
def createsuite():
 
discover=unittest.defaultTestLoader.discover('../test',pattern='test*.py',top_level_dir=None)#文件路径，文件名要求，默认不般不变
 print discover
 return discover
 
if __name__=="__main__":
 suite=createsuite()
 runner = unittest.TextTestRunner(verbosity=2)
 runner.run(suite)
 
